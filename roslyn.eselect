# Copyright 1999-2021 Gentoo Foundation
# Distributed under the terms of the GNU GPL version 2 or later

DESCRIPTION="Manage the /usr/bin/csc.exe script"
VERSION="202100830"
MAINTAINER="dotnet@gentoo.org"

# $ cat /usr/bin/csc
# #!/bin/sh
# exec /usr/bin/mono --gc-params=nursery-size=64m $MONO_OPTIONS /usr/lib/mono/4.5/csc.exe "$@"

# create the wrapper
make_wrapper() {
	cat << EOF > /usr/bin/csc
#!/bin/bash
exec /usr/bin/mono --gc-params=nursery-size=64m $MONO_OPTIONS $1 "$@"
EOF
}

# echoes $2 if $1 exists on disk
check_and_echo() {
    [[ -f ${1} ]] && echo ${2}
}

# build a list of compiler executables
find_targets() {
    local f
    check_and_echo "${EROOT}/usr/lib/mono/4.5/csc.exe" "${EROOT}/usr/lib/mono/4.5/csc.exe"
    for f in "${EROOT}"/usr/roslyn/x86_64-msbin-linux/roslyn/*; do
        check_and_echo "${f}" $(basename "${f}")
    done
}

# remove the wrapper
remove_target() {
    rm "${EROOT}/usr/bin/csc.exe"
}

# create new record
set_target() {
    local target=$1

    if is_number "${target}"; then
        local targets=( $(find_targets) )
        target=${targets[target-1]}
    fi

    [[ -z ${target} || ! -f ${EROOT}/usr/bin/${target} ]] \
        && die -q "Target \"$1\" doesn't appear to be valid!"

    make_wrapper ${target}
}

### show action ###

describe_show() {
    echo "Show the current settings"
}

do_show() {
    write_list_start "Current selection:"
    if [[ -L ${EROOT}/usr/bin/csc ]]; then
        local version=$(canonicalise "${EROOT}/usr/bin/csc")
        write_kv_list_entry "${version%/}" ""
    else
        write_kv_list_entry "(unset)" ""
    fi
}

### list action ###

describe_list() {
    echo "List available choices"
}

do_list() {
    local i targets=( $(find_targets) )

    write_list_start "Available msbuild symlink targets:"
    for (( i = 0; i < ${#targets[@]}; i++ )); do
        # highlight the target where the symlink is pointing to
        [[ ${targets[i]} = \
            $(basename "$(canonicalise "${EROOT}/usr/bin/msbuild")") ]] \
            && targets[i]=$(highlight_marker "${targets[i]}")
    done
    write_numbered_list -m "(none found)" "${targets[@]}"
}

### set action ###

describe_set() {
    echo "Set a new target"
}

describe_set_parameters() {
    echo "<target>"
}

describe_set_options() {
    echo "target : Target name or number (from 'list' action)"
}

do_set() {
    [[ -z $1 ]] && die -q "You didn't tell me which target to choose"
    [[ $# -gt 1 ]] && die -q "Too many parameters"

    set_target "$1" || die -q "Couldn't set a new target"
}
